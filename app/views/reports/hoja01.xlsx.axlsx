wb = xlsx_package.workbook

wb.styles do |style|

titu = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                                 alignment: { horizontal: :center,vertical: :center, wrap_text: :true },
                                b: true, sz: 8, bg_color: "C1C1C1")

soles = style.add_style(border: Axlsx::STYLE_THIN_BORDER,
                           alignment: { horizontal: :center ,vertical: :center},num_fmt: 3)




fechas = style.add_style(format_code: "mm-yyyy", border: Axlsx::STYLE_THIN_BORDER,
                        alignment: { horizontal: :center,vertical: :center })
fechad = style.add_style(format_code: "dd/mm/yy", border: Axlsx::STYLE_THIN_BORDER,
                                alignment: { horizontal: :center,vertical: :center })                        



centra = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                               alignment: { horizontal: :center,vertical: :center })




izq = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                                alignment: { horizontal: :left ,vertical: :center, wrap_text: :true})



desc = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                              alignment: { horizontal: :left ,vertical: :center, wrap_text: :true},sz: 9)



ddmm = style.add_style(format_code: "dd-mm", border: Axlsx::STYLE_THIN_BORDER,
                            alignment: { horizontal: :center,vertical: :center })


normal = style.add_style( alignment: { horizontal: :center,vertical: :center })


############################ merge
def merge_last_row(sheet,options ={})
  last_row = sheet.rows.last.index + 1
  first_col,last_col = options[:columns]
  if first_col && last_col
    sheet.merge_cells "#{first_col}#{last_row}:#{last_col}#{last_row}"
  else
    sheet.merge_cells sheet.rows.last
  end
  sheet.rows.last.style = style if options[:style]
end

############################

case @vopc.to_i
  when 1


wb.add_worksheet(name: "Pedido") do |sheet|



sheet.add_row []
 

sheet.add_row []





sheet.add_row ["FECHA", "O/P", "DETALLE", "MATERIAL", "UNIDAD", "CANTIDAD"],
style: [titu, titu, titu, titu, titu, titu]

Movement.order(:id).each do |mov|

              detnomb = DetailsController.new
              prodnomb = ProductsController.new


# vfec1=Header.where(id:mov.header_id).select('fecha1 as dd').first.dd
# vop=Header.where(id:mov.header_id).select('strih01 as dd').first.dd
# vdet=Header.where(id:mov.header_id).select('strih02 as dd').first.dd




Header.where(id:mov.header_id).each do |enca| 

sheet.add_row [enca.fecha1,enca.strih01,enca.strih02,prodnomb.nomprod(mov.intm01),
                detnomb.paraele(1,mov.intm02),mov.floam02],
style: [fechad, centra, desc, desc, desc, soles]

end




end       
sheet.column_widths *[10, 10, 10, 40, 10,10]

end    

when 2


wb.add_worksheet(name: "Pedido") do |sheet|



sheet.add_row []
 

sheet.add_row []





sheet.add_row ["FECHA", "O/P", "DETALLE", "MATERIAL", "UNIDAD", "CANTIDAD"],
style: [titu, titu, titu, titu, titu, titu]

Movement.order(:id).each do |mov|

              detnomb = DetailsController.new
              prodnomb = ProductsController.new


# vfec1=Header.where(id:mov.header_id).select('fecha1 as dd').first.dd
# vop=Header.where(id:mov.header_id).select('strih01 as dd').first.dd
# vdet=Header.where(id:mov.header_id).select('strih02 as dd').first.dd




Header.where(id:mov.header_id).each do |enca| 

sheet.add_row [enca.fecha1,enca.strih01,enca.strih02,prodnomb.nomprod(mov.intm01),
                detnomb.paraele(1,mov.intm02),mov.floam02],
style: [fechad, centra, desc, desc, desc, soles]

end




end       
sheet.column_widths *[10, 10, 10, 40, 10,10]

end    


end # fin de case opc
end #style
